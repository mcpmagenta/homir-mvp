datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_POSTGRES_PRISMA_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String   @id @default(uuid())
  email          String   @unique
  password       String
  role           Role
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  caregiverInfo  Caregiver?
  recipientInfo  Recipient?
  messages       Message[]
  conversations  Conversation[]
}

model Caregiver {
  id               String  @id @default(uuid())
  userId           String  @unique
  user             User    @relation(fields: [userId], references: [id])
  bio              String?
  rating           Float   @default(0.0)
  totalReviews     Int     @default(0)
  availability     Availability[]
  bookings         Booking[]
  reviews          Review[]
}

model Recipient {
  id               String  @id @default(uuid())
  userId           String  @unique
  user             User    @relation(fields: [userId], references: [id])
  bookings         Booking[]
  reviews          Review[]
}

model Availability {
  id          String    @id @default(uuid())
  caregiverId String
  caregiver   Caregiver @relation(fields: [caregiverId], references: [id])
  dayOfWeek   Int
  startTime   DateTime
  endTime     DateTime
}

model Booking {
  id               String     @id @default(uuid())
  caregiverId      String
  recipientId      String
  startTime        DateTime
  endTime          DateTime
  status           BookingStatus @default(PENDING)
  caregiver        Caregiver   @relation(fields: [caregiverId], references: [id])
  recipient        Recipient   @relation(fields: [recipientId], references: [id])
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model Review {
  id          String    @id @default(uuid())
  rating      Float
  comment     String?
  caregiverId String
  recipientId String
  caregiver   Caregiver @relation(fields: [caregiverId], references: [id])
  recipient   Recipient @relation(fields: [recipientId], references: [id])
  createdAt   DateTime  @default(now())
}

model Conversation {
  id           String     @id @default(uuid())
  participants User[]
  messages     Message[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Message {
  id              String       @id @default(uuid())
  conversationId  String
  conversation    Conversation @relation(fields: [conversationId], references: [id])
  senderId        String
  sender          User         @relation(fields: [senderId], references: [id])
  content         String
  createdAt       DateTime     @default(now())
}

enum Role {
  CAREGIVER
  RECIPIENT
  ADMIN
}

enum BookingStatus {
  PENDING
  ACCEPTED
  COMPLETED
  CANCELLED
}

